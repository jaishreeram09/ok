#Circular Convolution

import numpy as np
from numpy.fft import fft, ifft

#Input Seq
x = [1, 2, 3, 1]

#Impulse Response
h = [1, 1, 1]
L = len(x)
M = len(h)

if(M > L):
    k = M - L
    x = np.pad(x, (0,k))
else:
    l = L - M
    h = np.pad(h, (0,l))

#DFT of x(n) & h(n)

Xk = fft(x)
Hk = fft(h)

Yk = Xk * Hk
y = ifft(Yk)

print("Input Sequence = ", x)
print("Impulse Response = ", h)
print("Output Sequence = ",np.real(y))
